# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    # Clés Stripe (surchargées via variables d'environnement réelles en dev/prod)
    # STRIPE_SECRET_KEY et STRIPE_WEBHOOK_SECRET sont lues directement via %env()% ci-dessous.

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Stripe\StripeClientFactory:
        arguments:
            $secretKey: '%env(STRIPE_SECRET_KEY)%'
            $webhookSecret: '%env(default::STRIPE_WEBHOOK_SECRET)%'

    # Rendre public pour tests fonctionnels (peut être déplacé dans services_test.yaml)
    App\Service\Stripe\StripeWebhookHandler:
        public: true

    # Adapters StripeIntegration
    App\StripeIntegration\Adapter\DoctrineCustomerProvider: ~
    App\StripeIntegration\Adapter\DoctrinePlanPriceProvider: ~

    # Aliases ports -> impl
    App\StripeIntegration\Port\CustomerProviderInterface: '@App\StripeIntegration\Adapter\DoctrineCustomerProvider'
    App\StripeIntegration\Port\PlanPriceProviderInterface: '@App\StripeIntegration\Adapter\DoctrinePlanPriceProvider'

    # Checkout service alias (interface)
    App\StripeIntegration\Checkout\CheckoutServiceInterface: '@App\StripeIntegration\Checkout\CheckoutService'
